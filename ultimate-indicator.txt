// Â© Kaniugu
//@version=5
indicator("Ultimate Indicator", overlay = true)

// VALUE
var above = float(na)
var below = float(na)
var top = float(na)
var bottom = float(na)
var line center = na, var line resistance = na, var line support = na, var line mresistance = na, var line msupport = na
period = input.int(100, "Period", minval = 5)
extend = input.string("Right", "Extend", options = ["Right", "None"]) == "Right" ? extend.right : extend.none
line.delete(center[1]), line.delete(resistance[1]), line.delete(support[1]), line.delete(mresistance[1]), line.delete(msupport[1])

// direction
up = open > close and open[1] < close[1]
down = open < close and open[1] > close[1]

// LEVEL
peak = up and high > above
trough = down and low < below

// THRESHOLD
if up
    above := high
if down
    below := low

// LABEL
if peak
    label.new(bar_index, na, str.format("{0,number,#.##}", (high - bottom) / high * 100), yloc = yloc.abovebar, style = label.style_none, textcolor = color.red)
    top := high
if trough
    label.new(bar_index, na, str.format("{0,number,#.##}", (top - low) / top * 100), yloc = yloc.belowbar, style = label.style_none, textcolor = color.blue)
    bottom := low

// LINEAR REGRESSION
x = 0.0, y = 0.0, x2 = 0.0, y2 = 0.0, xy = 0.0
index = period - 1
for i = 0 to index
    back = nz(close[i])
    x := x + i
    y := y + back
    x2 := x2 + (i * i)
    y2 := y2 + (back * back)
    xy := xy + (back * i)
sx = math.pow(x, 2.0)
sy = math.pow(y, 2.0)
pearson = (xy - (x * y) / period) / (math.sqrt(x2 - sx / period) * math.sqrt(y2 - sy / period))
xx = x * x
slope = x2 == xx ? 0.0 : (period * xy - x * y) / (period * x2 - xx)
linreg = (y - slope * x) / period
intercept = linreg + bar_index * slope
deviation = 0.0
for i = 0 to index
    deviation := deviation + math.pow(nz(close[i]) - (intercept - slope * bar_index[i]), 2.0)
deviation := math.sqrt(deviation / index) * 2
point = linreg + slope * index

// SIGNAL
signal = barstate.islast and (peak[1] or trough[1]) and (close > linreg + deviation or close < linreg - deviation)
alertcondition(signal, "Signal", message = "Signal")
if signal
    label.new(bar_index, close < linreg ? low - deviation : high + deviation, close < linreg ? "LL" : "HH", style = close < linreg ? label.style_label_up : label.style_label_down, textcolor = color.silver, color = color.black)

// DRAW
center      := line.new(bar_index - period + 1, point                , bar_index, linreg                , xloc.bar_index, extend, pearson < 0 ? color.lime : color.aqua, line.style_dotted, 2)
resistance  := line.new(bar_index - period + 1, point + deviation    , bar_index, linreg + deviation    , xloc.bar_index, extend, color.red , line.style_dashed, 2)
support     := line.new(bar_index - period + 1, point - deviation    , bar_index, linreg - deviation    , xloc.bar_index, extend, color.blue, line.style_dashed, 2)
mresistance := line.new(bar_index - period + 1, point + deviation / 2, bar_index, linreg + deviation / 2, xloc.bar_index, extend, color.red , line.style_dotted, 1)
msupport    := line.new(bar_index - period + 1, point - deviation / 2, bar_index, linreg - deviation / 2, xloc.bar_index, extend, color.blue, line.style_dotted, 1)
plotshape(peak, style = shape.xcross, color = color.red, location = location.abovebar, size = size.tiny, title = "Peak")
plotshape(trough, style = shape.diamond, color = color.blue, location = location.belowbar, size = size.tiny, title = "Trough")
ribbon = ta.ema(close, 24) > ta.ema(close, 8) ? color.aqua : color.lime
plot(ta.ema(close,  8), color = color.new(ribbon, 40), title =  "EMA 8")
plot(ta.ema(close, 12), color = color.new(ribbon, 50), title = "EMA 12")
plot(ta.ema(close, 16), color = color.new(ribbon, 60), title = "EMA 16")
plot(ta.ema(close, 20), color = color.new(ribbon, 70), title = "EMA 20")
plot(ta.ema(close, 24), color = color.new(ribbon, 80), title = "EMA 24")
fill(plot((open + close) / 2, display = display.none), plot(ta.ema(close, 24), display = display.none), color = color.new(ribbon, 95))